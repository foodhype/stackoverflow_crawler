<h1>
java - In the below code, Even "synchronized" keyword is used , the threads are not synchronizing, Why? - Stack Overflow
<\h1>
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/13363952/java-synchronized-method-not-synchronized">Java Synchronized methodâ€¦not synchronized</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<pre><code>class A implements Runnable         //Thread class
{
        public void run()
        {
            read();
        }
        public synchronized void read()
        {
            for(int i= 0 ; i&lt; 7 ;i++)
            System.out.println(Thread.currentThread().getName() + " " + i);
        }
}

public class Main
{

        public static void main(String[] args)
        {
             Thread t = new Thread(new A());
             t.setName("t1");

             Thread c = new Thread(new A());
             c.setName("t2");

            t.start();
            c.start();    
}
</code></pre>
<p>output:</p>
<p><img alt="enter image description here" src="http://i.stack.imgur.com/EBIiP.png"/></p>
<p>You're synchronizing on different objects, on the <code>this</code> Thread created when the A object is created. For it to work you must synchronize on the one object, preferably an object created explicitly for this purpose. Also, a nitpick, don't extend Thread but instead implement Runnable.</p>
<p>Because they're synchronizing on different objects. Thread <code>t</code> synchs on <code>t</code> and <code>c</code> synchs on <code>c</code>.</p>
<p>If you create a shared object <code>f</code> and put <code>synchronized(f)</code> in the methods, it'll work as you intend.</p>
<p>For example put <code>private final static Object lock = new Object();</code> in your <code>A</code> class, and put <code>synchronized(lock) { // method body }</code> inside <code>read()</code>.</p>