<h1>
casting - How to make a drop-in replacement in Java - Stack Overflow
<\h1>
<p>I want to add new methods to the java.awt.Rectangle class. If I were using Objective-C, then I could use a category. Or if I were using C++ I could make a new class MyRectangle and define a constructor/cast pair so that it is a drop-in replacement.   </p>
<p>For example, in C++</p>
<pre><code>struct java_awt_Rectangle { int x,y,w,h; };    // a dummy for illustration

class MyRectangle                      // a drop in replacement for Rectangle
{
    java_awt_Rectangle rect;

public:
    MyRectangle() {}
    MyRectangle(const java_awt_Rectangle&amp; r) {}

    operator java_awt_Rectangle&amp; ()
    {
        return rect;
    }
};


int main()
{
    java_awt_Rectangle t;
    MyRectangle m;
    m = t;
    t = m;
}
</code></pre>
<p>Is anything like this possible in Java?  I tried making a class in Java</p>
<pre><code>public class MyRectangle extends java.awt.Rectangle
{
    public MyRectangle(java.awt.Rectangle r)
    {
        super(r.x, r.y, r.width, r.height);
    }
}
</code></pre>
<p>but it doesn't work, because in Java the constructor is not used for implicit conversion (like it is in other languages).</p>
<p><strong>EDIT:</strong> notice in the C++ example I get implicit conversion in <em>both</em> directions. That is my goal.</p>
<p>Apparently the designers of the Java language felt that implicit conversions are hazardous or confusing, so they did not include any mechanism for it, other than a few primitive types (int -&gt; double, etc) and downcasting.</p>
<p>The cleanest way to add some utilities to the Rectangle class is to write your own static-only utils, for instance</p>
<pre><code>public class MyUtils
{
    public static Point getCenter(Rectangle r) {}
}
</code></pre>