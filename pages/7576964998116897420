<h1>
java.lang.NumberFormatException: For input string: "" occured - Stack Overflow
<\h1>
<p>I'm facing with an issue when I deploy my application on server side (on local machine everything works fine). In my application user can use multiupload for uploading files. Here is my controller:</p>
<pre><code>@Controller
public class FileUploadController {

    @Autowired
    private StoryService storyService;

    @Autowired
    private PhotoService photoService;

    @RequestMapping("/uploader")
    public String home() {

        // will be resolved to /views/fileUploader.jsp
        return "admin/fileUploader";
    }

    @RequestMapping(value = "/admin/story/upload", method = RequestMethod.POST)
    public @ResponseBody
    String upload(MultipartHttpServletRequest request,
                              HttpServletResponse response, HttpServletRequest req) throws IOException {

        //get story id
        Integer story_id = Integer.valueOf(req.getParameter("story_id"));
        Story story = storyService.findById(story_id);

        // Getting uploaded files from the request object
        Map&lt;String, MultipartFile&gt; fileMap = request.getFileMap();

        // Iterate through the map
        for (MultipartFile multipartFile : fileMap.values()) {

            // Save the file to local disk
            String name = Long.toString(System.currentTimeMillis());

            //original size
            saveFileToLocalDisk(multipartFile, name + ".jpg");

            //medium size
            Thumbnails.of(convertMultifileToFile(multipartFile)).size(1800, 2400)
                    .toFile(new File(getDestinationLocation() + "medium_" + name));

            //thumbnail size
            Thumbnails.of(convertMultifileToFile(multipartFile)).size(600, 800)
                    .toFile(new File(getDestinationLocation() + "thumb_" + name));


            //Save to db
            savePhoto(multipartFile, name, story);
        }
        return "redirect:/admin";
    }

    private void saveFileToLocalDisk(MultipartFile multipartFile, String name)
            throws IOException, FileNotFoundException {

        FileCopyUtils.copy(multipartFile.getBytes(), new FileOutputStream(getDestinationLocation() +
                name));
    }

    private String getOutputFilename(MultipartFile multipartFile) {

        return getDestinationLocation() + multipartFile.getOriginalFilename();
    }

    private Photo savePhoto(MultipartFile multipartFile, String name, Story story)
            throws IOException {

        Photo photo = new Photo();
        if (story != null) {
            photo.setName(name);
            photo.setStory(story);
            photoService.addPhoto(photo);
        }
        return photo;
    }

    private String getDestinationLocation() {
        return "/var/www/static/images/";
    }

    public File convertMultifileToFile(MultipartFile file) throws IOException
    {
        File convFile = new File(file.getOriginalFilename());
        convFile.createNewFile();
        FileOutputStream fos = new FileOutputStream(convFile);
        fos.write(file.getBytes());
        fos.close();
        return convFile;
    }
}
</code></pre>
<p>When I try to upload images on server I'm getting following exception:</p>
<pre><code>SEVERE: Servlet.service() for servlet [mvc-dispatcher] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: ""] with root cause
java.lang.NumberFormatException: For input string: ""
</code></pre>
<p>Can't figure out what it means and how to solve it. By the way I've noticed that when I upload files which are 100-200 KB everything is ok, when files are 4-5 MB I get exception.</p>
<p>Thanks in advance!</p>
<p>It appears that <code>"story_id"</code> is not always set; correlation with the file size may or may not be a coincidence.</p>
<p>You should protect your code from client-side errors like this by treating the <code>"story_id"</code> parameter as optional. This is a good idea for all request parameters, because it prevents your server side from crashing on improperly formed requests:</p>
<pre><code>String storyIdStr = req.getParameter("story_id");
if (storyIdStr == null || storyIdStr.length() == 0) {
    // Deal with the error
}
Integer story_id = null;
try {
    story_id = Integer.valueOf(storyIdStr);
} catch (NumberFormatException nfe) {
    // Deal with the error
}
</code></pre>
<p><code>Integer.valueOf(req.getParameter("story_id"));</code> will give you this exception if <code>req.getParameter("story_id")</code> returns an empty String, since an empty String can't be parsed as an <code>Integer</code>.</p>