<h1>
java - How is the ArrayList referenced in a getElementAt() method - Stack Overflow
<\h1>
<p>This is in java.</p>
<p>Alright so I am inheriting the abstract method <code>getElementAt(int)</code>. I want to <strong>override this method</strong> so that it finds an element at a specified index within an ArrayList. Since I am not actually passing an <strong>ArrayList</strong> into the method, I don't know how to reference it.</p>
<pre><code>someArrayList.getElementAt(int n);
</code></pre>
<p>How does it access someArrayList within the method?</p>
<p>As for what I'm inheriting from</p>
<p><code>public class ListEngine extends AbstractListModel</code></p>
<p>and I am overriding the class </p>
<pre><code>getElementAt(int n)
</code></pre>
<p>Well <code>AbstractListModel</code> does <strong>not</strong> provide an implementation on how the items are stored, etc.</p>
<p>What you thus need to do is use/implement a <code>List</code> object (or perhaps some kind of <code>Collection</code>) and then "redirect" calls to it:</p>
<p><strong>Example</strong> (with <code>ArrayList</code>):</p>
<pre><code>public class ListEngine&lt;T&gt; extends AbstractListModel {

    private final ArrayList&lt;T&gt; innerData = new ArrayList&lt;T&gt;();

    public ListEngine () {
    }

    @Override
    public T getElementAt(int index) {
        return innerData.get(index);
    }

    @Override
    public int size() {
        return innerData.size();
    }

}
</code></pre>
<p>Or you could use another <code>List</code> (like <code>LinkedList&lt;T&gt;</code>).</p>
<p>The above implementation is quite useless of course, since the initialized <code>innerData</code> is always empty. Furthermore <strong>if something is modified to the <code>innerData</code></strong>, you need to call <code>fireContentsChanged</code> to notify the listereners (this is the responsibility of the inheriting class, doing not so can result in severe problems since some listeners may count on this).</p>