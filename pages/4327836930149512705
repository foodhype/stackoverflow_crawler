<h1>
java - Why System.out.println("hey s1==s2:"+s1==s2); prints "false" as the output instead of printing "hey s1==s2:false" - Stack Overflow
<\h1>
<p>I have written the following java code:</p>
<pre><code>String s1 = new String("shan");
String s2 = new String("shan");
String s3="shan";
String s4="shan";
System.out.println("hey s1==s2:"+s1==s2);
System.out.println("s3==s4:"+s3==s4);
System.out.println("s1.equals(s2): "+s1.equals(s2));
System.out.println("s3.equals(s4): "+s3.equals(s4));
System.out.println("s1==s3: "+s1==s3);
System.out.println("s1.equals(s3): "+s1.equals(s3));
System.out.println("hey s1==s2:"+true);
</code></pre>
<p>The output:</p>
<pre><code>false
false
s1.equals(s2): true
s3.equals(s4): true
false
s1.equals(s3): true
hey s1==s2:true
</code></pre>
<p>Why does line #5 result in just "false" as the output instead of "hey s1==s2:false"?</p>
<pre><code>Line5: System.out.println("hey s1==s2:"+s1==s2);
</code></pre>
<p>Because of the operator precedence <code>"hey s1==s2:"+s1</code> resolving first and then comparing to <strong>s2</strong> which leads to false.</p>
<p>Give the highest precedence to resolve it to correct. Parenthesis have the highest precedence.</p>
<pre><code>System.out.println("hey s1==s2:"+(s1==s2));
</code></pre>
<pre><code>System.out.println("hey s1==s2:"+s1==s2)
</code></pre>
<p>evaluates <code>("hey s1==s2:"+s1)==s2</code>, which is <code>false</code></p>
<p>That's why false is printed.</p>
<p>The reason for this behavior is that the <code>+</code> operator has a higher <a href="http://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html">precedence</a> than the "==" operator.</p>
<p>The following would print what you expected :</p>
<pre><code>System.out.println("hey s1==s2:"+(s1==s2))
</code></pre>
<p>To comapre strings you have to call <code>s1.equals(s2)</code>. the result is <code>true</code>. <code>==</code> compares the pointer to the strings and that sare not the same.</p>